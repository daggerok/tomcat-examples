name: CI
on:
  push:
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to trigger manual jobs
        required: false
        default: ''
env:
  JAVA_8_VERSION: '8'
  NODE_VERSION: '19.7.0'
jobs:
  tests:
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./build
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/io/github/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - run: sudo rm -rf ~/.m2/repository/daggerok ~/.m2/repository/io/github/daggerok ~/.m2/repository/com/github/daggerok
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_8_VERSION }}
      #- uses: actions/setup-node@v3
      #  with:
      #    node-version: ${{ env.NODE_VERSION }}
      #- run: test `command -v docker1` || ( echo "docker command not found" ; false )
      #- run: for i in `docker ps -aq` ; do docker rm -f -v $i ; done
      #- run: docker compose -f $GITHUB_WORKSPACE/docker-compose.yml up -d
      #- run: for i in 8081 27017 5672 8082 25672 ; do npm_config_yes=true npx wait-port $i ; done
      - run: cd $GITHUB_WORKSPACE ; ./mvnw
      - run: ls -lah $GITHUB_WORKSPACE/01-simple-app/target/
